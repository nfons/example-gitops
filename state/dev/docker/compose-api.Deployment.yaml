apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    com.docker.expires: "2019-12-01T02:53:02Z"
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: "2018-12-01T02:53:02Z"
  generation: 1
  labels:
    com.docker.deploy-namespace: docker
    com.docker.fry: compose.api
    com.docker.image-tag: v0.4.12
  name: compose-api
  namespace: docker
  resourceVersion: "20301"
  selfLink: /apis/apps/v1/namespaces/docker/deployments/compose-api
  uid: 38059d88-f514-11e8-a1f9-025000000001
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      com.docker.deploy-namespace: docker
      com.docker.fry: compose.api
      com.docker.image-tag: v0.4.12
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        com.docker.expires: "2019-12-01T02:53:02Z"
      creationTimestamp: null
      labels:
        com.docker.deploy-namespace: docker
        com.docker.fry: compose.api
        com.docker.image-tag: v0.4.12
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: Exists
      containers:
      - args:
        - --kubeconfig
        - ""
        - --authentication-kubeconfig
        - ""
        - --authorization-kubeconfig
        - ""
        - --etcd-servers=https://127.0.0.1:2379
        - --etcd-cafile=/etc/docker-compose/etcd/ca.crt
        - --etcd-certfile=/etc/docker-compose/etcd/client.crt
        - --etcd-keyfile=/etc/docker-compose/etcd/client.key
        - --secure-port=9443
        - --tls-cert-file=/etc/docker-compose/tls/server.crt
        - --tls-private-key-file=/etc/docker-compose/tls/server.key
        image: docker/kube-compose-api-server:v0.4.12
        imagePullPolicy: Always
        name: compose
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/docker-compose/etcd
          name: etcd-secret
          readOnly: true
        - mountPath: /etc/docker-compose/tls
          name: tls-secret
          readOnly: true
      dnsPolicy: ClusterFirst
      hostNetwork: true
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: compose
      serviceAccountName: compose
      terminationGracePeriodSeconds: 30
      volumes:
      - name: etcd-secret
        secret:
          defaultMode: 420
          items:
          - key: ca
            path: ca.crt
          - key: cert
            path: client.crt
          - key: key
            path: client.key
          secretName: compose-etcd
      - name: tls-secret
        secret:
          defaultMode: 420
          items:
          - key: ca
            path: ca.crt
          - key: cert
            path: server.crt
          - key: key
            path: server.key
          secretName: compose-tls
